/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './app.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '../services/clow-card.service';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../node_modules/@angular/router/src/directives/router_link.ngfactory';
import * as import10 from '../../../node_modules/@angular/router/src/directives/router_link_active.ngfactory';
import * as import11 from '@angular/core/src/linker/query_list';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../../node_modules/@angular/router/src/directives/router_outlet.ngfactory';
import * as import14 from '@angular/core/src/change_detection/change_detection_util';
import * as import15 from '@angular/router/src/router';
import * as import16 from '@angular/router/src/router_state';
import * as import17 from '@angular/common/src/location/location_strategy';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/router/src/router_outlet_map';
import * as import20 from '@angular/core/src/linker/component_factory_resolver';
import * as import21 from '@angular/router/src/directives/router_link';
import * as import22 from '@angular/router/src/directives/router_link_active';
import * as import23 from '@angular/router/src/directives/router_outlet';
export class Wrapper_AppComponent {
  /*private*/ _eventHandler:Function;
  context:import0.AppComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.AppComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_AppComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_AppComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.AppComponent>;
  _AppComponent_0_3:Wrapper_AppComponent;
  __ClowCardService_0_4:import5.ClowCardService;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AppComponent_Host0,renderType_AppComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  get _ClowCardService_0_4():import5.ClowCardService {
    if ((this.__ClowCardService_0_4 == null)) { (this.__ClowCardService_0_4 = new import5.ClowCardService()); }
    return this.__ClowCardService_0_4;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'clow-card-fortune-telling',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_AppComponent0(this.viewUtils,this,0,this._el_0);
    this._AppComponent_0_3 = new Wrapper_AppComponent();
    this.compView_0.create(this._AppComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._AppComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.AppComponent) && (0 === requestNodeIndex))) { return this._AppComponent_0_3.context; }
    if (((token === import5.ClowCardService) && (0 === requestNodeIndex))) { return this._ClowCardService_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._AppComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const AppComponentNgFactory:import8.ComponentFactory<import0.AppComponent> = new import8.ComponentFactory<import0.AppComponent>('clow-card-fortune-telling',View_AppComponent_Host0,import0.AppComponent);
const styles_AppComponent:any[] = ([] as any[]);
var renderType_AppComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_AppComponent,{});
export class View_AppComponent0 extends import1.AppView<import0.AppComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _el_3:any;
  _RouterLinkWithHref_3_3:import9.Wrapper_RouterLinkWithHref;
  _RouterLinkActive_3_4:import10.Wrapper_RouterLinkActive;
  _query_RouterLink_3_0:import11.QueryList<any>;
  _query_RouterLinkWithHref_3_1:import11.QueryList<any>;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  /*private*/ _vc_7:import12.ViewContainer;
  _RouterOutlet_7_5:import13.Wrapper_RouterOutlet;
  _text_8:any;
  /*private*/ _expr_15:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AppComponent0,renderType_AppComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_15 = import14.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','main'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'h1',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_2,'a',new import3.InlineArray4(4,'routerLink','/daily-reading','routerLinkActive','active'),(null as any));
    this._RouterLinkWithHref_3_3 = new import9.Wrapper_RouterLinkWithHref(this.parentView.injectorGet(import15.Router,this.parentIndex),this.parentView.injectorGet(import16.ActivatedRoute,this.parentIndex),this.parentView.injectorGet(import17.LocationStrategy,this.parentIndex));
    this._RouterLinkActive_3_4 = new import10.Wrapper_RouterLinkActive(this.parentView.injectorGet(import15.Router,this.parentIndex),new import18.ElementRef(this._el_3),this.renderer,this.ref);
    this._query_RouterLink_3_0 = new import11.QueryList<any>();
    this._query_RouterLinkWithHref_3_1 = new import11.QueryList<any>();
    this._text_4 = this.renderer.createText(this._el_3,'',(null as any));
    this._text_5 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_0,'router-outlet',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._vc_7 = new import12.ViewContainer(7,0,this,this._el_7);
    this._RouterOutlet_7_5 = new import13.Wrapper_RouterOutlet(this.parentView.injectorGet(import19.RouterOutletMap,this.parentIndex),this._vc_7.vcRef,this.parentView.injectorGet(import20.ComponentFactoryResolver,this.parentIndex),(null as any));
    this._text_8 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_3));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.RouterLinkWithHref) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._RouterLinkWithHref_3_3.context; }
    if (((token === import22.RouterLinkActive) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._RouterLinkActive_3_4.context; }
    if (((token === import23.RouterOutlet) && (7 === requestNodeIndex))) { return this._RouterOutlet_7_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = '/daily-reading';
    this._RouterLinkWithHref_3_3.check_routerLink(currVal_3_0_0,throwOnChange,false);
    this._RouterLinkWithHref_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    const currVal_3_1_0:any = 'active';
    this._RouterLinkActive_3_4.check_routerLinkActive(currVal_3_1_0,throwOnChange,false);
    this._RouterLinkActive_3_4.ngDoCheck(this,this._el_3,throwOnChange);
    this._RouterOutlet_7_5.ngDoCheck(this,this._el_7,throwOnChange);
    this._vc_7.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_RouterLink_3_0.dirty) {
        this._query_RouterLink_3_0.reset(([] as any[]));
        this._RouterLinkActive_3_4.context.links = this._query_RouterLink_3_0;
        this._query_RouterLink_3_0.notifyOnChanges();
      }
      if (this._query_RouterLinkWithHref_3_1.dirty) {
        this._query_RouterLinkWithHref_3_1.reset([this._RouterLinkWithHref_3_3.context]);
        this._RouterLinkActive_3_4.context.linksWithHrefs = this._query_RouterLinkWithHref_3_1;
        this._query_RouterLinkWithHref_3_1.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._RouterLinkActive_3_4.context.ngAfterContentInit(); }
    }
    this._RouterLinkWithHref_3_3.checkHost(this,this,this._el_3,throwOnChange);
    const currVal_15:any = import3.inlineInterpolate(1,'',this.context.title,'');
    if (import3.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setText(this._text_4,currVal_15);
      this._expr_15 = currVal_15;
    }
  }
  destroyInternal():void {
    this._vc_7.destroyNestedViews();
    this._RouterLinkWithHref_3_3.ngOnDestroy();
    this._RouterLinkActive_3_4.ngOnDestroy();
    this._RouterOutlet_7_5.ngOnDestroy();
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._RouterLinkWithHref_3_3.handleEvent(eventName,$event) && result);
    return result;
  }
}